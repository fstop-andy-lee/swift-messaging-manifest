## service deploy
# kubectl delete -f service-deployment.yaml
# minikube kubectl -- delete -f ./service-deployment.yaml

# kubectl create -f service-deployment.yaml
# minikube kubectl -- create -f ./service-deployment.yaml


# create role to list service
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: list-service
 namespace: default
rules:
# - apiGroups:
#    - ''
#   resources:
#    - pods
#   verbs:
#    - list    
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "configmaps"]
    verbs: ["get", "watch", "list"]   
---
# create service account for app
apiVersion: v1
kind: ServiceAccount
metadata:
 name: app-user   
 namespace: default
---
# binding role to service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: list-service_app-user
 namespace: default
roleRef:
 kind: ClusterRole
 name: list-service
 apiGroup: rbac.authorization.k8s.io
subjects:
 - kind: ServiceAccount
   name: app-user
   namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: swift-messaging
data:
  profile: develop
  application-develop.yml: |
    spring:
      datasource:
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
          connectionTimeout: 30000
          idleTimeout: 600000
          maxLifetime: 1800000
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://10.107.88.169:5432/fxdb?currentSchema=public,swift
        validationQuery: SELECT 1
        username: sa
        password: 123qwe
        #initialization-mode: always    
      jpa:
        properties:
          hibernate:
            # for lazy load no session exception
            enable_lazy_load_no_trans: true
            jdbc:
              lob:
                non_contextual_creation: true      
          show_sql: true
          format_sql: true
          ddl-auto: none
        database-platform: tw.com.firstbank.spring.dialect.PostgreSQL95JsonbDialect
        show-sql: true
      rabbitmq:
       addresses: 172.30.194.152:5672
       adminAddresses: http://172.30.194.152:5672
       nodes: rabbit@172.30.194.152
       #username: guest
       #password: guest
       username: andy
       password: 123qwe
       virtual-host: /
       useSSL: false
       sslProperties:
       ssl:
         keyStore:
         keyStorePassphrase:
         trustStore:
         trustStorePassphrase:
       channelCacheSize: 100
       listener:
         simple:
           default-requeue-rejected: false
           retry:
             enabled: false
           # auto, manual
           acknowledge-mode: auto        
    opentracing:
      spring:
        cloud:
          jdbc:
            enabled: false
          log:
            enabled: true
      jaeger:
        enabled: true
        log-spans: true  
        service-name: ${spring.application.name}
        udp-sender:
          host: 172.30.187.75
          port: 6831
        const-sampler:
          decision: true
    inward-rmt-url: http://fx.apps.online.ocp4.com/inward-rmt/v1/send
    # 0=asyncQ, 1=syncQ, 2=api
    process-type: 0    

---
apiVersion: v1
kind: Service
metadata:
  name: swift-messaging
spec:
  selector:
    app: swift-messaging
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swift-messaging
spec:
  selector:
      matchLabels:
        app: swift-messaging
  replicas: 1
  template:
    metadata:
      labels:
        app: swift-messaging
    spec:
      # pod service account
      serviceAccountName: app-user
      containers:
        - name: swift-messaging
          image: andylee1973/swift-messaging:latest
          imagePullPolicy: Always #IfNotPresent
          args: ["--spring.config.location=/home/spring/app/conf/"]
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                    name: swift-messaging
                    key: profile
            #- name: JAVA_OPTIONS
            #  value: "-Dspring.profiles.active=${profile}"
            #- name: ENVIRONMENT
            #  valueFrom:
            #    configMapKeyRef:
            #      name: swift-messaging
            #      key: profile    
          
            #- name: SPRING_CONFIG_LOCATION
            #  value: "/home/spring/app/conf/"
            - name: JAEGER_AGENT_PORT
              value: "6831"
          volumeMounts:
            - name: swift-messaging
              mountPath: /home/spring/app/conf/application-develop.yml
              subPath: application-develop.yml
      volumes:
        - name: swift-messaging
          configMap:
            name: swift-messaging
            items:
              - key: application-develop.yml
                path: application-develop.yml

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: swift-messaging-route
  namespace: default
  creationTimestamp: null
  labels:
    app: swift-messaging
spec:
  host: swift.apps.online.ocp4.com
  to:
    kind: Service
    name: swift-messaging
    weight: 100
  port:
    targetPort: 8080
  wildcardPolicy: None
status:
  ingress:
    - host: swift.apps.online.ocp4.com
      routerName: default
      conditions:
        - type: Admitted
          status: 'True'
      wildcardPolicy: None
      routerCanonicalHostname: router-default.apps.online.ocp4.com       
